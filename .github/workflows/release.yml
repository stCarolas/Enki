name: Release

on:
  push:
    branches:    
      - master 

jobs:

  check_style:
    name: Check Code Style
    runs-on: ubuntu-latest
    steps:

    - name: Checkout sources
      uses: actions/checkout@v1

    - name: Check with EditorConfig
      uses: zbeekman/EditorConfig-Action@v1.1.0

  up_version:
    name: Update Version
    runs-on: ubuntu-latest

    steps:

    - name: Checkout sources
      uses: actions/checkout@v1
     
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Set up Apache Maven
      uses: stCarolas/setup-maven@v3
      with:
        maven-version: 3.5.4

    - name: Calculate new version
      id: next_version
      uses: zwaldowski/semver-release-action@v1
      with:
        dry_run: true
        bump: patch
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set new version in parent pom
      run: |
          mvn -q io.takari.polyglot:polyglot-translate-plugin:translate -Dinput=pom.yml -Doutput=pom.xml
          mvn -q versions:set -DnewVersion=${{ steps.next_version.outputs.version }} -f pom.xml
          mvn -q io.takari.polyglot:polyglot-translate-plugin:translate -Dinput=pom.xml -Doutput=pom.yml

    - name: Set new version in core and server
      run: |
          cd core
          mvn -q io.takari.polyglot:polyglot-translate-plugin:translate -Dinput=pom.yml -Doutput=pom.xml
          mvn -q versions:set -DnewVersion=${{ steps.next_version.outputs.version }} -f pom.xml
          mvn -q io.takari.polyglot:polyglot-translate-plugin:translate -Dinput=pom.xml -Doutput=pom.yml
          cd ..
          cd server
          mvn -q io.takari.polyglot:polyglot-translate-plugin:translate -Dinput=pom.yml -Doutput=pom.xml
          mvn -q versions:set -DnewVersion=${{ steps.next_version.outputs.version }} -f pom.xml
          mvn -q io.takari.polyglot:polyglot-translate-plugin:translate -Dinput=pom.xml -Doutput=pom.yml
          cd ..

    - name: Set new version in providers and handlers
      run: |
        for handler in $(ls handlers)
        do
          cd handlers/$handler
          mvn -q io.takari.polyglot:polyglot-translate-plugin:translate -Dinput=pom.yml -Doutput=pom.xml
          mvn -q versions:set -DnewVersion=${{ steps.next_version.outputs.version }} -f pom.xml
          mvn -q io.takari.polyglot:polyglot-translate-plugin:translate -Dinput=pom.xml -Doutput=pom.yml
          cd ../..
        done
        for provider in $(ls providers)
        do
          cd providers/$provider
          mvn -q io.takari.polyglot:polyglot-translate-plugin:translate -Dinput=pom.yml -Doutput=pom.xml
          mvn -q versions:set -DnewVersion=${{ steps.next_version.outputs.version }} -f pom.xml
          mvn -q io.takari.polyglot:polyglot-translate-plugin:translate -Dinput=pom.xml -Doutput=pom.yml
          cd ../..
        done
        for tool in $(ls tools)
        do
          cd tools/$tool
          mvn -q io.takari.polyglot:polyglot-translate-plugin:translate -Dinput=pom.yml -Doutput=pom.xml
          mvn -q versions:set -DnewVersion=${{ steps.next_version.outputs.version }} -f pom.xml
          mvn -q io.takari.polyglot:polyglot-translate-plugin:translate -Dinput=pom.xml -Doutput=pom.yml
          cd ../..
        done

    - name: Push pom.yml with new version
      uses: github-actions-x/commit@v2.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        push-branch: 'master'
        commit-message: 'bump version'
        files: "./*"

    - name: Tag new version
      uses: zwaldowski/semver-release-action@v1
      with:
        bump: patch
        github_token: ${{ secrets.GITHUB_TOKEN }}

  build_core:
    name: Publish Enki Core
    needs: [up_version]
    runs-on: ubuntu-latest

    steps:

      - name: Checkout sources
        uses: actions/checkout@v1
        with:
          ref: master
     
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up Apache Maven
        uses: stCarolas/setup-maven@v3
        with:
          maven-version: 3.5.4
  
      - name: Publish Enki Core
        run: mvn -B -q deploy -Ddeploy.token=${{ secrets.BINTRAY_API_KEY }} -s ../.github/workflows/settings.xml
        working-directory: core

  build_providers:
    name: Publish Enki Providers
    needs: [build_core]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        module: [ "github", "one-repo", "bitbucket", "gitlab" ]

    steps:
    
      - name: Checkout sources
        uses: actions/checkout@v1
        with:
          ref: master
     
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up Apache Maven
        uses: stCarolas/setup-maven@v3
        with:
          maven-version: 3.5.4

      - name: Publish Enki Provider
        run: mvn -B -q deploy -Ddeploy.token=${{ secrets.BINTRAY_API_KEY }} -s ../../.github/workflows/settings.xml
        working-directory: providers/${{ matrix.module }}

  build_server:
    name: Publish Enki Server
    needs: [build_providers]
    runs-on: ubuntu-latest

    steps:
    
      - name: Checkout sources
        uses: actions/checkout@v1
        with:
          ref: master
     
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Set up Apache Maven
        uses: stCarolas/setup-maven@v3
        with:
          maven-version: 3.5.4

      - name: Publish Enki Server jar
        run: |
          mvn -B -q deploy -Ddeploy.token=${{ secrets.BINTRAY_API_KEY }} -s ../.github/workflows/settings.xml
          rm -rf target/*-sources.jar 
          cp -rf target ..
          cp -rf Dockerfile ..
        working-directory: server

      - name: Publish Enki Server docker image
        uses: manusa/actions-publish-docker@master
        with:
          name: stcarolas/enki
          username: stcarolas
          password: ${{ secrets.DOCKER_TOKEN }}
